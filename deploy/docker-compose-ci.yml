version: '3.8'

services:
  fronted:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      api:
        condition: service_started
    ports:
      - 80:80
      - 8000:8000
  api:
    image: pavel2232/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    env_file:
      - .env
    depends_on:
      db:
          condition: service_healthy
    container_name: todolist_app
  bot:
    image: pavel2232/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_started
      api:
        condition: service_started
    command: python manage.py runbot

  db:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}" ]
      interval: 5s
      timeout: 30s
      retries: 5
    container_name: pg_db




volumes:
  postgres_data:

